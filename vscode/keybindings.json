[
    {
      // window move left
      "key": "ctrl+h",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
      "args": {
        "after": ["<c-w>", "h"]
      }
    },
    {
      // window move right
      "key": "ctrl+l",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
      "args": {
        "after": ["<c-w>", "l"]
      }
    },
    {
      // window move down
      "key": "ctrl+j",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
      "args": {
        "after": ["<c-w>", "j"]
      }
    },
    {
      // window move up
      "key": "ctrl+k",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
      "args": {
        "after": ["<c-w>", "k"]
      }
    },
  
    {
      "key": "ctrl+n",
      "command": "workbench.action.focusActiveEditorGroup"
    },
    //open project
    {
      "key": "space o p",
      "command": "projectManager.listProjects",
      "when": "!inputFocus"
    },
    //change window
    {
      "key": "space o w",
      "command": "workbench.action.switchWindow",
      "when": "!inputFocus"
    },
    //show command
    {
      "key": "ctrl+p",
      "command": "workbench.action.showCommands",
      "when": "!inputFocus"
    },
    //focus treeview
    {
      "key": "space f t",
      "command": "workbench.files.action.focusFilesExplorer",
      "when": "!inputFocus"
    },
    //open recent file
    {
      "key": "space f r",
      "command": "workbench.action.openRecent",
      "when": "!inputFocus"
    },
    //find opened buffer
    {
      "key": "space f b",
      "command": "workbench.action.showEditorsInActiveGroup",
      "when": "!inputFocus"
    },
    //focus todo
    {
      "key": "space t d",
      "command": "workbench.view.extension.todo",
      "when": "!inputFocus"
    },
    {
      "key": "space s s",
      "command": "workbench.action.showAllSymbols",
      "when": "!inputFocus"
    },
    //find file
    {
      "key": "space f f",
      "command": "workbench.action.quickOpen",
      "when": "!inputFocus"
    },
    //find string
    {
      "key": "space f s",
      "command": "find-it-faster.findWithinFiles",
      "when": "!inputFocus"
    },
    //toggle slidebar
    {
      "key": "space e",
      "command": "workbench.action.toggleSidebarVisibility",
      "when": "!inputFocus"
    },
    //decrease view size
    {
      "key": "ctrl+down",
      "command": "workbench.action.decreaseViewSize"
    },
    //increase view size
    {
      "key": "ctrl+up",
      "command": "workbench.action.increaseViewSize"
    },
    //new empty file
    {
      "key": "space n",
      "command": "workbench.action.files.newUntitledFile",
      "when": "!inputFocus"
    },
  
    {
      // rename file
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      // new file
      "key": "a",
      "command": "explorer.newFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      // delete file or folder
      "key": "d",
      "command": "deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    // 移动到上一个
    {
      "key": "ctrl+k",
      "command": "selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "ctrl+j",
      "command": "workbench.action.quickOpenSelectNext",
      "when": "inQuickOpen"
    },
    {
      "key": "ctrl+k",
      "command": "workbench.action.quickOpenSelectPrevious",
      "when": "inQuickOpen"
    },
    {
      "key": "ctrl+j",
      "command": "showNextParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
      "key": "ctrl+k",
      "command": "showPrevParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
      "key": "ctrl+k",
      "command": "showPrevParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
  
    {
      "key": "ctrl+k",
      "when": "codeActionMenuVisible",
      "command": "selectPrevCodeAction"
    },
    {
      "key": "ctrl+j",
      "when": "codeActionMenuVisible",
      "command": "selectNextCodeAction"
    },
    {
      "key": "ctrl+down",
      "command": "-extension.vim_ctrl+down",
      "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
      "key": "ctrl+p",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "f1",
      "command": "-workbench.action.showCommands"
    },
    {
      "key": "ctrl+shift+f9",
      "command": "workbench.debug.viewlet.action.removeAllBreakpoints"
    },
    //format file
    {
      "key": "space+f+k",
      "command": "editor.action.formatDocument",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
  
  
  
  
  
  
  
  
    //remove keybindins
    {
      "key": "ctrl+k ctrl+r",
      "command": "-git.revertSelectedRanges",
      "when": "isInDiffEditor && !operationInProgress"
    },
    {
      "key": "ctrl+k ctrl+n",
      "command": "-git.unstageSelectedRanges",
      "when": "isInDiffEditor && !operationInProgress"
    },
    {
      "key": "ctrl+k ctrl+alt+s",
      "command": "-git.stageSelectedRanges",
      "when": "isInDiffEditor && !operationInProgress"
    },
    {
      "key": "ctrl+k e",
      "command": "-workbench.files.action.focusOpenEditorsView",
      "when": "workbench.explorer.openEditorsView.active"
    },
    {
      "key": "ctrl+k ctrl+i",
      "command": "-editor.action.showHover",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+k ctrl+shift+c",
      "command": "-copyRelativeFilePath",
      "when": "editorFocus"
    },
    {
      "key": "ctrl+k ctrl+shift+c",
      "command": "-copyRelativeFilePath",
      "when": "!editorFocus"
    },
    {
      "key": "ctrl+alt+k",
      "command": "-bookmarks.toggle",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+k ctrl+c",
      "command": "-editor.action.addCommentLine",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "ctrl+k ctrl+l",
      "command": "-editor.toggleFold",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+j",
      "command": "-editor.unfoldAll",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+0",
      "command": "-editor.foldAll",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+.",
      "command": "-editor.removeManualFoldingRanges",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+u",
      "command": "-editor.action.removeCommentLine",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "ctrl+k ctrl+b",
      "command": "-editor.action.setSelectionAnchor",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+k ctrl+i",
      "command": "-editor.debug.action.showDebugHover",
      "when": "editorTextFocus && inDebugMode"
    },
    {
      "key": "ctrl+k ctrl+x",
      "command": "-editor.action.trimTrailingWhitespace",
      "when": "editorTextFocus && !editorReadonly"
    },
    {
      "key": "ctrl+k ctrl+r",
      "command": "-workbench.action.keybindingsReference"
    },
    {
      "key": "ctrl+k ctrl+shift+\\",
      "command": "-notebook.cell.split",
      "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
      "key": "ctrl+k y",
      "command": "-notebook.cell.toggleOutputScrolling",
      "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
    },
    {
      "key": "ctrl+k t",
      "command": "-notebook.cell.expandCellOutput",
      "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
      "key": "ctrl+k ctrl+c",
      "command": "-notebook.cell.expandCellInput",
      "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
      "key": "ctrl+k t",
      "command": "-notebook.cell.collapseCellOutput",
      "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
      "key": "ctrl+k ctrl+c",
      "command": "-notebook.cell.collapseCellInput",
      "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
      "key": "ctrl+k enter",
      "command": "-workbench.action.keepEditor"
    },
    {
      "key": "ctrl+k ctrl+pagedown",
      "command": "-workbench.action.nextEditorInGroup"
    },
    {
      "key": "ctrl+k ctrl+pageup",
      "command": "-workbench.action.previousEditorInGroup"
    },
    {
      "key": "ctrl+k shift+enter",
      "command": "-workbench.action.pinEditor",
      "when": "!activeEditorIsPinned"
    },
    {
      "key": "ctrl+k ctrl+w",
      "command": "-workbench.action.closeAllEditors"
    },
    {
      "key": "ctrl+k ctrl+shift+w",
      "command": "-workbench.action.closeAllGroups"
    },
    {
      "key": "ctrl+k w",
      "command": "-workbench.action.closeEditorsInGroup"
    },
    {
      "key": "ctrl+k u",
      "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
      "key": "ctrl+k o",
      "command": "-workbench.action.copyEditorToNewWindow",
      "when": "activeEditor"
    },
    {
      "key": "ctrl+k ctrl+right",
      "command": "-workbench.action.focusRightGroup"
    },
    {
      "key": "ctrl+k ctrl+left",
      "command": "-workbench.action.focusLeftGroup"
    },
    {
      "key": "ctrl+k z",
      "command": "-workbench.action.toggleZenMode",
      "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
      "key": "ctrl+k ctrl+m",
      "command": "-workbench.action.toggleMaximizeEditorGroup",
      "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
      "key": "ctrl+k shift+enter",
      "command": "-workbench.action.unpinEditor",
      "when": "activeEditorIsPinned"
    },
    {
      "key": "ctrl+k ctrl+\\",
      "command": "-workbench.action.splitEditorUp"
    },
    {
      "key": "ctrl+k up",
      "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
      "key": "ctrl+k ctrl+\\",
      "command": "-workbench.action.splitEditorDown"
    },
    {
      "key": "ctrl+k down",
      "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
      "key": "ctrl+k ctrl+\\",
      "command": "-workbench.action.splitEditorRight"
    },
    {
      "key": "ctrl+k right",
      "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
      "key": "ctrl+k ctrl+\\",
      "command": "-workbench.action.splitEditorLeft"
    },
    {
      "key": "ctrl+k left",
      "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
      "key": "ctrl+k ctrl+shift+\\",
      "command": "-workbench.action.splitEditorInGroup",
      "when": "activeEditorCanSplitInGroup"
    },
    {
      "key": "ctrl+k ctrl+shift+\\",
      "command": "-workbench.action.joinEditorInGroup",
      "when": "sideBySideEditorActive"
    },
    {
      "key": "ctrl+k ctrl+\\",
      "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
      "key": "ctrl+k ctrl+up",
      "command": "-workbench.action.focusAboveGroup"
    },
    {
      "key": "ctrl+k ctrl+down",
      "command": "-workbench.action.focusBelowGroup"
    },
    {
      "key": "ctrl+k f12",
      "command": "-editor.action.revealDefinitionAside",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
      "key": "ctrl+k ctrl+f12",
      "command": "-editor.action.revealDefinitionAside",
      "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
      "key": "ctrl+k ctrl+k",
      "command": "-editor.action.defineKeybinding",
      "when": "resource == 'vscode-userdata:/c%3A/Users/HQ/AppData/Roaming/Code%20-%20Insiders/User/keybindings.json'"
    },
    {
      "key": "ctrl+k ctrl+f",
      "command": "-editor.action.formatSelection",
      "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
      "key": "ctrl+k ctrl+,",
      "command": "-editor.createFoldingRangeFromSelection",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k m",
      "command": "-workbench.action.editor.changeLanguageMode",
      "when": "!notebookEditorFocused"
    },
    {
      "key": "ctrl+k f",
      "command": "-workbench.action.closeFolder",
      "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
      "key": "ctrl+k ctrl+d",
      "command": "-editor.action.moveSelectionToNextFindMatch",
      "when": "editorFocus"
    },
    {
      "key": "ctrl+k i",
      "command": "-inlineChat.start",
      "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
    },
    {
      "key": "ctrl+k i",
      "command": "-inlineChat.quickVoice.start",
      "when": "editorFocus && hasSpeechProvider && !inlineChat.quickChatInProgress"
    },
    {
      "key": "ctrl+k i",
      "command": "-inlineChat.quickVoice.stop",
      "when": "hasSpeechProvider && inlineChat.quickChatInProgress"
    },
    {
      "key": "ctrl+shift+k",
      "command": "-editor.action.deleteLines",
      "when": "textInputFocus && !editorReadonly"
    },
    {
      "key": "ctrl+k ctrl+s",
      "command": "-workbench.action.openGlobalKeybindings"
    },
    {
      "key": "ctrl+k ctrl+t",
      "command": "-workbench.action.selectTheme"
    },
    {
      "key": "ctrl+k ctrl+shift+n",
      "command": "-notifications.showList"
    },
    {
      "key": "ctrl+k ctrl+p",
      "command": "-workbench.action.showAllEditors"
    },
    {
      "key": "ctrl+k ctrl+shift+s",
      "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
      "key": "ctrl+k c",
      "command": "-workbench.files.action.compareWithClipboard"
    },
    {
      "key": "ctrl+k d",
      "command": "-workbench.files.action.compareWithSaved"
    },
    {
      "key": "ctrl+k ctrl+o",
      "command": "-workbench.action.files.openFolder",
      "when": "openFolderWorkspaceSupport"
    },
    {
      "key": "ctrl+k ctrl+k",
      "command": "-editor.action.selectFromAnchorToCursor",
      "when": "editorTextFocus && selectionAnchorSet"
    },
    {
      "key": "ctrl+k ctrl+]",
      "command": "-editor.unfoldRecursively",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+[",
      "command": "-editor.foldRecursively",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+=",
      "command": "-editor.unfoldAllExcept",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+9",
      "command": "-editor.unfoldAllMarkerRegions",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+-",
      "command": "-editor.foldAllExcept",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+1",
      "command": "-editor.foldLevel1",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+2",
      "command": "-editor.foldLevel2",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+3",
      "command": "-editor.foldLevel3",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+4",
      "command": "-editor.foldLevel4",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+5",
      "command": "-editor.foldLevel5",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+6",
      "command": "-editor.foldLevel6",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+7",
      "command": "-editor.foldLevel7",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+/",
      "command": "-editor.foldAllBlockComments",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+8",
      "command": "-editor.foldAllMarkerRegions",
      "when": "editorTextFocus && foldingEnabled"
    },
    {
      "key": "ctrl+k ctrl+i",
      "command": "-workbench.action.terminal.focusHover",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
      "key": "ctrl+k ctrl+q",
      "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
      "key": "ctrl+k ctrl+alt+c",
      "command": "-workbench.action.addComment"
    },
    {
      "key": "ctrl+k ctrl+alt+up",
      "command": "-editor.action.previousCommentingRange",
      "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
      "key": "ctrl+k ctrl+alt+down",
      "command": "-editor.action.nextCommentingRange",
      "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
      "key": "ctrl+k v",
      "command": "-markdown.showPreviewToSide",
      "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
      "key": "ctrl+k ctrl+a",
      "command": "-keybindings.editor.addKeybinding",
      "when": "inKeybindings && keybindingFocus"
    },
    {
      "key": "ctrl+k ctrl+e",
      "command": "-keybindings.editor.defineWhenExpression",
      "when": "inKeybindings && keybindingFocus"
    },
    {
      "key": "ctrl+k s",
      "command": "-saveAll"
    },
    {
      "key": "ctrl+k f2",
      "command": "-togglePeekWidgetFocus",
      "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
      "key": "ctrl+k down",
      "command": "-views.moveViewDown",
      "when": "focusedView != ''"
    },
    {
      "key": "ctrl+k left",
      "command": "-views.moveViewLeft",
      "when": "focusedView != ''"
    },
    {
      "key": "ctrl+k right",
      "command": "-views.moveViewRight",
      "when": "focusedView != ''"
    },
    {
      "key": "ctrl+k up",
      "command": "-views.moveViewUp",
      "when": "focusedView != ''"
    },
    {
      "key": "ctrl+k shift+o",
      "command": "-workbench.action.compareEditor.openSide",
      "when": "inDiffEditor"
    },
    {
      "key": "ctrl+k p",
      "command": "-workbench.action.files.copyPathOfActiveFile"
    },
    {
      "key": "ctrl+k ctrl+o",
      "command": "-workbench.action.files.openLocalFolder",
      "when": "remoteFileDialogVisible"
    },
    {
      "key": "ctrl+k r",
      "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
      "key": "ctrl+k ctrl+i",
      "command": "-workbench.action.showTreeHover",
      "when": "customTreeView && listFocus && !inputFocus && !treestickyScrollFocused"
    }
  ]